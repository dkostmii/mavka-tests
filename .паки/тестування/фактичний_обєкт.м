структура ФактичнийОбєкт
  значення
  навпаки
  провалити_припущення
кінець

дія ФактичнийОбєкт.не_()
  я.навпаки = !я.навпаки

  вернути я
кінець

дія ФактичнийОбєкт.дорівнює(очікуваний_обєкт)
  якщо (!я.навпаки і (я.значення != очікуваний_обєкт))
    я.провалити_припущення(я, очікуваний_обєкт, "Очікується, що об'єкти рівні")
  якщо (я.навпаки і (я.значення == очікуваний_обєкт))
    я.провалити_припущення(я, очікуваний_обєкт, "Очікується, що об'єкти не є рівні")
  кінець
кінець

дія ФактичнийОбєкт.є_пусто()
  якщо (!я.навпаки і (я.значення не є пусто))
    я.провалити_припущення(я, пусто, "Очікується, що об'єкт є пусто")
  якщо (я.навпаки і (я.значення є пусто))
    я.провалити_припущення(я, пусто, "Очікується, що об'єкт не є пусто")
  кінець
кінець

дія ФактичнийОбєкт.є_вірне()
  якщо (!я.навпаки і (я.значення != так))
    я.провалити_припущення(я, так, "Очікується, що твердження є вірне")
  якщо (я.навпаки і (я.значення == так))
    я.провалити_припущення(я, так, "Очікується, що твердження не є вірне")
  кінець
кінець

дія ФактичнийОбєкт.падає()
  спробувати
    я.значення()
  зловити п
    якщо (я.навпаки)
      я.значення = "падає"
      я.провалити_припущення(я, "падає", "Очікується, що Дія чи функція не падає")
    кінець

    вернути
  кінець

  якщо (!я.навпаки)
    я.значення = "не падає"
    я.провалити_припущення(я, "падає", "Очікується, що Дія чи функція падає")
  кінець
кінець

дія ФактичнийОбєкт.має_довжину(очікувана_довжина число)
  я.значення = я.значення.довжина()

  якщо (!я.навпаки і (я.значення != очікувана_довжина))
    я.провалити_припущення(я, очікувана_довжина, "Очікується, що список має довжину %(очікувана_довжина)")
  якщо (я.навпаки і (я.значення == очікувана_довжина))
    я.провалити_припущення(я, очікувана_довжина, "Очікується, що список має довжину, відмінну від %(очікувана_довжина)")
  кінець
кінець

дати ФактичнийОбєкт
