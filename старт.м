__шлях_до_папки_паків__ = ".паки"

взяти пак тестування.припустити
взяти пак тестування.тестовий_випадок
взяти пак тестування.провалити

дія один_не_дорівнює_один()
  припустити(1).не_().дорівнює(1)
кінець

дія порожній_список_не_є_пусто()
  припустити([]).не_().є_пусто()
кінець

дія так_не_є_так()
  припустити(так).не_().є_вірне()
кінець

дія дія_що_падає()
  впасти "Дія падає"
кінець

дія дія_не_падає()
  припустити(дія_що_падає).не_().падає()
кінець

дія пустий_список_має_довжину()
  припустити([]).має_довжину(1)
кінець

дія мій_список_містить_двійку()
  мій_список = [1, 2, 3]

  припустити(мій_список).містить_елемент(2)
кінець

дія мій_список_еквівалентний_самому_собі()
  мій_список = [1, 2, 3]

  припустити(мій_список).еквівалентний_списку(мій_список)
кінець

дія тест_що_провалиться()
  провалити("Тест провалився")
кінець


тестовий_випадок("1 != 1", один_не_дорівнює_один)
тестовий_випадок("Порожній список не є пусто", порожній_список_не_є_пусто)
тестовий_випадок("Так не є так", так_не_є_так)
тестовий_випадок("Дія не падає", дія_не_падає)
тестовий_випадок("Пустий список має довжину 1", пустий_список_має_довжину)
тестовий_випадок("Мій список містить двійку", мій_список_містить_двійку)
тестовий_випадок("Мій список еквівалентний самому собі", мій_список_еквівалентний_самому_собі)
тестовий_випадок("Тест, що провалиться", тест_що_провалиться)
